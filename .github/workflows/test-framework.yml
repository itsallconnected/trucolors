name: Test Framework

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'stable-*'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Enable Corepack for Yarn version management
        run: |
          corepack enable
          # Extract Yarn version from package.json
          YARN_VERSION=$(grep -o '"packageManager": "yarn@[^"]*"' package.json | grep -o '[0-9.]*')
          echo "Project requires Yarn version: $YARN_VERSION"
          corepack prepare yarn@$YARN_VERSION --activate

      - name: Install dependencies
        run: |
          bundle config set --local frozen false
          bundle install --jobs 4

      - name: Fix script permissions
        run: |
          # Fix permissions on bin/*
          chmod +x bin/* || true
          # Fix normalize-all-locales.rb permission
          chmod +x normalize-all-locales.rb || true

      - name: Run Rubocop check
        run: |
          bundle exec rubocop --auto-correct || true

      - name: Run Prettier check
        run: |
          yarn install
          yarn prettier --write "**/*.{js,jsx,ts,tsx,css,scss,json,yml,yaml}" || true

  assets:
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: production
      NODE_ENV: production
      PRECOMPILING_ASSETS: true
      CI: true
      OTP_SECRET: dummy-otp-secret-for-ci

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libidn11-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Enable Corepack for Yarn version management
        run: |
          corepack enable
          # Extract Yarn version from package.json
          YARN_VERSION=$(grep -o '"packageManager": "yarn@[^"]*"' package.json | grep -o '[0-9.]*')
          echo "Project requires Yarn version: $YARN_VERSION"
          corepack prepare yarn@$YARN_VERSION --activate

      - name: Set up Javascript environment
        uses: ./.github/actions/setup-javascript
        with:
          onlyProduction: 'true'

      - name: Install dependencies
        run: |
          bundle config set --local frozen false
          bundle install --jobs 4 --retry 3

      - name: Precompile assets
        run: |
          echo "Setting up asset precompilation environment..."
          bundle exec rake assets:precompile

  migrations:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10ms
          --health-timeout 3s
          --health-retries 50
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      RAILS_ENV: test
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASS: postgres
      PRECOMPILING_ASSETS: true
      CI: true
      OTP_SECRET: dummy-otp-secret-for-ci

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libidn11-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Install dependencies
        run: |
          bundle config set --local frozen false
          bundle install --jobs 4 --retry 3

      - name: Run db:prepare to test migrations
        run: |
          bin/rails db:create
          bin/rails db:migrate:up VERSION=20250407100000 # Run fix_duplicate_migrations first
          bin/rails db:schema:load
          bin/rails db:migrate
