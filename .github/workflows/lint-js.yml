name: JavaScript Linting
on:
  merge_group:
  push:
    branches:
      - 'main'
      - 'stable-*'
    paths:
      - 'package.json'
      - 'yarn.lock'
      - 'tsconfig.json'
      - '.nvmrc'
      - '.prettier*'
      - '.eslint*'
      - '**/*.js'
      - '**/*.jsx'
      - '**/*.ts'
      - '**/*.tsx'
      - '.github/workflows/lint-js.yml'

  pull_request:
    paths:
      - 'package.json'
      - 'yarn.lock'
      - 'tsconfig.json'
      - '.nvmrc'
      - '.prettier*'
      - '.eslint*'
      - '**/*.js'
      - '**/*.jsx'
      - '**/*.ts'
      - '**/*.tsx'
      - '.github/workflows/lint-js.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Javascript environment
        uses: ./.github/actions/setup-javascript

      - name: Verify Yarn setup
        run: |
          # Print diagnostic information
          echo "Using Node.js version: $(node -v)"
          echo "Using Yarn from: $(which yarn)"
          echo "Yarn version: $(yarn --version)"
          
          # Explicitly prepare the required Yarn version from package.json if needed
          if grep -q '"packageManager"' package.json; then
            YARN_VERSION=$(grep -o '"packageManager": "yarn@[^"]*"' package.json | grep -o '[0-9][0-9.]*')
            echo "Project requires Yarn version: $YARN_VERSION"
            corepack prepare yarn@$YARN_VERSION --activate
          fi

      - name: Install Babel decorator plugin
        run: yarn add --dev @babel/plugin-proposal-decorators

      - name: ESLint
        run: yarn lint:js --max-warnings 0

      - name: Typecheck
        run: yarn typecheck
